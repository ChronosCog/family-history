import { Qualifier, FactQualifier } from './qualifier';

export interface Fact<T> {
  date?: Date;
  place?: string;
  type: T;
  value?: string;
  qualifiers?: Qualifier<FactQualifier>[];
}

export enum PersonFactType {
  Custom,
  Adoption,
  AdultChristening,
  Amnesty,
  Apprenticeship,
  Arrest,
  Award,
  Baptism,
  BarMitzvah,
  BatMitzvah,
  Birth,
  BirthNotice,
  Blessing,
  Burial,
  Caste,
  Census,
  Christening,
  Circumcision,
  Clan,
  Confirmation,
  Court,
  Cremation,
  Death,
  Education,
  EducationEnrollment,
  Emigration,
  Enslavement,
  Ethnicity,
  Excommunication,
  FirstCommunion,
  Funeral,
  GenderChange,
  Graduation,
  Heimat,
  Immigration,
  Imprisonment,
  Inquest,
  LandTransaction,
  Language,
  Living,
  MaritalStatus,
  Medical,
  MilitaryAward,
  MilitaryDischarge,
  MilitaryDraftRegistration,
  MilitaryInduction,
  MilitaryService,
  Mission,
  MoveFrom,
  MoveTo,
  MultipleBirth,
  NationalId,
  Nationality,
  Naturalization,
  NumberOfChildren,
  NumberOfMarriages,
  Obituary,
  Occupation,
  Ordination,
  Pardon,
  PhysicalDescription,
  Probate,
  Property,
  Race,
  Religion,
  Residence,
  Retirement,
  Stillbirth,
  TaxAssessment,
  Tribe,
  Will,
  Visit,
  Yahrzeit,
}

export enum CoupleRelationshipFactType {
  Custom,
  Annulment,
  CommonLawMarriage,
  CivilUnion,
  Divorce,
  DivorceFiling,
  DomesticPartnership,
  Engagement,
  Marriage,
  MarriageBanns,
  MarriageContract,
  MarriageLicense,
  MarriageNotice,
  NumberOfChildren,
  Separation,
}

export enum ParentChildRelationshipType {
  AdoptiveParent,
  BiologicalParent,
  FosterParent,
  GuardianParent,
  StepParent,
  SociologicalParent,
  SurrogateParent,
}
